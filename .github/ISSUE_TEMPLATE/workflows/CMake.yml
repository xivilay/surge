name: CMake

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  BUILD_DIR: ${{ github.workspace }}/build
  PROJECT_NAME_XT: surge-xt
  PROJECT_NAME_FX: surge-fx
  PRODUCT_NAME_XT: Surge\ XT
  PRODUCT_NAME_FX: Surge\ XT\ Effects
  IOS_NAME: iOS

jobs:
  build:
    strategy:
      matrix:
        runner: ['macos']
    runs-on: ${{ matrix.runner }}-latest
    name: ${{ matrix.runner }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.GH_PAT }}
          submodules: 'recursive'
      
      - name: Restore Cache
        uses: actions/cache/restore@v4
        id: cache-restore
        with: 
          path: ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}
          key: build-cmake-${{ hashFiles('CMakeLists.txt') }}

      - name: Configure CMake
        if: runner.os == 'macOS'
        run: >
          cmake 
          -B ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}
          -G Xcode
          -D JUCE_IOS=1
          -D SURGE_BUILD_CLAP=0
          -D SURGE_BUILD_TESTRUNNER=0
          -D SURGE_SKIP_LUA=1
          -D SURGE_SKIP_VST3=1
          -D SURGE_XT_BUILD_AUV3=1
          -D CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -D CMAKE_SYSTEM_NAME=${{ env.IOS_NAME }}
          -D CMAKE_OSX_ARCHITECTURES=arm64
          -D CMAKE_OSX_DEPLOYMENT_TARGET=15.0
          -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY=""
          -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO
          -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_REQUIRED=NO

      - name: Patch ${{ env.PRODUCT_NAME_XT }} Info.plist
        run: >
          plutil 
          -insert LSSupportsOpeningDocumentsInPlace 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_XT }}/CMakeFiles/${{ env.PROJECT_NAME_XT }}_Standalone.dir/Info.plist

          plutil 
          -insert UIFileSharingEnabled 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_XT }}/CMakeFiles/${{ env.PROJECT_NAME_XT }}_Standalone.dir/Info.plist

          plutil 
          -insert LSSupportsOpeningDocumentsInPlace 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_XT }}/CMakeFiles/${{ env.PROJECT_NAME_XT }}_AUv3.dir/Info.plist

          plutil 
          -insert UIFileSharingEnabled 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_XT }}/CMakeFiles/${{ env.PROJECT_NAME_XT }}_AUv3.dir/Info.plist

      - name: Patch ${{ env.PRODUCT_NAME_FX }} Info.plist
        run: >
          plutil 
          -insert LSSupportsOpeningDocumentsInPlace 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_FX }}/CMakeFiles/${{ env.PROJECT_NAME_FX }}_Standalone.dir/Info.plist

          plutil 
          -insert UIFileSharingEnabled 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_FX }}/CMakeFiles/${{ env.PROJECT_NAME_FX }}_Standalone.dir/Info.plist

          plutil 
          -insert LSSupportsOpeningDocumentsInPlace 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_FX }}/CMakeFiles/${{ env.PROJECT_NAME_FX }}_AUv3.dir/Info.plist

          plutil 
          -insert UIFileSharingEnabled 
          -bool True 
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_FX }}/CMakeFiles/${{ env.PROJECT_NAME_FX }}_AUv3.dir/Info.plist

      - name: Build
        if: runner.os == 'macOS'
        run: >
          cmake
          --build ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}
          --config=${{ env.BUILD_TYPE }}

      - name: Save Cache
        uses: actions/cache/save@v4
        id: cache-save
        with: 
          path: ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}
          key: ${{ steps.cache-restore.outputs.cache-primary-key}}

      - name: Prepare payload for ${{ env.PRODUCT_NAME_XT }}
        if: runner.os == 'macOS'
        run: >
          mkdir -p ${{ runner.temp }}/Payload

          mv
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_XT }}/${{ env.PROJECT_NAME_XT }}_artefacts/${{ env.BUILD_TYPE }}/Standalone/${{ env.PRODUCT_NAME_XT }}.app
          ${{ runner.temp }}/Payload/${{ env.PRODUCT_NAME_XT }}.app

      - name: Zip ${{ env.PROJECT_NAME_XT }}.ipa
        if: runner.os == 'macOS'
        working-directory: ${{ runner.temp }}
        run: >
          cmake
          -E tar cv ${{ runner.temp }}/${{ env.PRODUCT_NAME_XT }}.ipa
          --format=zip
          Payload/

      - name: Clean Payload
        if: runner.os == 'macOS'
        working-directory: ${{ runner.temp }}
        run: rm -R Payload/

      - name: Prepare payload for ${{ env.PRODUCT_NAME_FX }}
        if: runner.os == 'macOS'
        run: >
          mkdir -p ${{ runner.temp }}/Payload

          mv
          ${{ env.BUILD_DIR }}_${{ env.IOS_NAME }}/src/${{ env.PROJECT_NAME_FX }}/${{ env.PROJECT_NAME_FX }}_artefacts/${{ env.BUILD_TYPE }}/Standalone/${{ env.PRODUCT_NAME_FX }}.app
          ${{ runner.temp }}/Payload/${{ env.PRODUCT_NAME_FX }}.app

      - name: Zip ${{ env.PROJECT_NAME_FX }}.ipa
        if: runner.os == 'macOS'
        working-directory: ${{ runner.temp }}
        run: >
          cmake
          -E tar cv ${{ runner.temp }}/${{ env.PRODUCT_NAME_FX }}.ipa
          --format=zip
          Payload/

      - name: Upload artifacts
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME_XT }}_${{ env.IOS_NAME }}
          path: |
            ${{ runner.temp }}/${{ env.PRODUCT_NAME_XT }}.ipa
            ${{ runner.temp }}/${{ env.PRODUCT_NAME_FX }}.ipa
          if-no-files-found: error
          retention-days: 1